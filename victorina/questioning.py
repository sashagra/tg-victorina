from questions import is_the_questions_tomorrow, get_user_answers, get_next_question, get_question_by_id
from answers import update_user_answer
from helpers import string_time, shift_days_formatted, compute_num_of_days
from buttons import add_keyboard, ReplyKeyboardRemove, register_btn, inline as inline_btn

markers = ["1Ô∏è‚É£", "2Ô∏è‚É£", "3Ô∏è‚É£", "4Ô∏è‚É£", "5Ô∏è‚É£", "6Ô∏è‚É£", "7Ô∏è‚É£", "8Ô∏è‚É£", "9Ô∏è‚É£", "üîü"]

block_answers = {
    "2021-11-01": "https://telegra.ph/Otvety-i-spravka-po-pervomu-bloku-10-11",
    "2021-11-02": "https://telegra.ph/Vtoroj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-14",
    "2021-11-03": "https://telegra.ph/Vtoroj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-17",
    "2021-11-04": "https://telegra.ph/CHetvyortyj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-17",
    "2021-11-05": "https://telegra.ph/Pyatyj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-17",
    "test": "https://telegra.ph/Eshche-test-09-28"
}

start_day = get_question_by_id(1)["question"]["day"]
test_block_info = [
    "https://telegra.ph/Otvety-i-spravka-po-pervomu-bloku-10-11",
    "https://telegra.ph/Vtoroj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-14",
    "https://telegra.ph/Vtoroj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-17",
    "https://telegra.ph/CHetvyortyj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-17",
    "https://telegra.ph/Pyatyj-blok-viktoriny-Spravka-o-zhizni-SHrily-Prabhupady-10-17"
]


def get_info_link(yesterday=False):
    shift = 0 if not yesterday else 1
    idx = compute_num_of_days(start_day) - shift
    if idx < 0:
        return None
    return test_block_info[idx]


def question_message(question, user_answer=None):
    if not question:  # –µ—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        return _no_questions()
    btns = [f"–û—Ç–≤–µ—Ç {markers[index]}    {question['question']['id']}_{answer['id']}" for index,
            answer in enumerate(question["answers"])]

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –≤—ã–±–æ—Ä–æ–º –æ—Ç–≤–µ—Ç–∞
    answers_text = ""
    if question["multiple_answers"]:
        # –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –µ—Å–ª–∏ –µ—â–µ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–æ–≤
        if user_answer:
            answers_arr = user_answer[:-1].split("_")
            btns = [btn for btn in btns if btn2answer(
                btn)[1] not in answers_arr]
            btns.append(f"–ì–æ—Ç–æ–≤–æ –í.{question['question']['id']}")
            return "–ú–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –µ—â–µ –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç –∏–ª–∏ '–ì–æ—Ç–æ–≤–æ' –µ—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö", add_keyboard(btns)
        # answers_text += "‚ùóÔ∏è –í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ. –ó–∞ –∫–∞–∂–¥—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –±–∞–ª–ª—ã\n"
    answers_text += "-------\n"
    for index, answer in enumerate(question["answers"]):
        answers_text += f"{markers[index]} {answer['answer_text']}\n\n"

    full_question_text = f"‚ùì –í–æ–ø—Ä–æ—Å ‚Ññ{question['question']['id']}\n{question['question']['question_text']}\n" + answers_text

    return full_question_text, add_keyboard(btns)


def btn2answer(btn_text):
    try:
        answers = btn_text.split("    ")[1].split("_")
    except IndexError:
        return None
    try:
        question_id, answer_id = answers
    except ValueError:
        return None
    return question_id, answer_id


def _no_questions():
    if is_the_questions_tomorrow():  # –ø—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å –ª–∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω–∞
        reply = "–ù–∞ —Å–µ–≥–æ–¥–Ω—è –≤–æ–ø—Ä–æ—Å–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç. –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã –∑–∞–≤—Ç—Ä–∞"
    else:
        reply = "–í–∏–∫—Ç–æ—Ä–∏–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–∫–æ—Ä–æ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
    # TODO —Å–¥–µ–ª–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã
    try:
        info_link = get_info_link()
        # info_link = block_answers[string_time['today']()]
    except KeyError:
        info_link = block_answers['test']
    return f"{reply}\n{info_link}", ReplyKeyboardRemove()
